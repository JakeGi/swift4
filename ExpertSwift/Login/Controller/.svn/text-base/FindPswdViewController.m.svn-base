//
//  FindPswdViewController.m
//  demo_yijiankang
//
//  Created by jinyiyanglao on 16/8/11.
//  Copyright © 2016年 jinyiyanglao. All rights reserved.
//
// 只要添加了这个宏，就不用带mas_前缀
#define MAS_SHORTHAND
// 只要添加了这个宏，equalTo就等价于mas_equalTo
#define MAS_SHORTHAND_GLOBALS
#import "FindPswdViewController.h"
@interface FindPswdViewController ()<UITextFieldDelegate>
@property(nonatomic,strong)UITextField *findUserNameTextfield;
@property(nonatomic,strong)UITextField *findVerificationCode;

@property(nonatomic,strong)UITextField *findPasswordTextfield;
@property(nonatomic,strong)UITextField *findAffirmPasswordTextfield;
@property(nonatomic,strong)UIView *viewOne;
@property(nonatomic,strong)UIView *viewTwo;
@property(nonatomic,strong)NSString *tokenString;
@property(nonatomic,strong)UIButton *getCodeButton;
@property (nonatomic,strong)UIButton *nextButton;
@property (nonatomic,strong)UIButton *registerButton;
@end


@implementation FindPswdViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self loadUI];
    
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden = NO;
    
    
}
-(void)loadUI{
    self.navigationItem.title=@"密码找回";

    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor=[UIColor whiteColor];
    
    self.viewOne=[[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
    self.viewTwo=[[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height)];
    self.viewOne.backgroundColor = [UIColor colorWithRed:246/255.f green:246/255.f blue:246/255.f alpha:1.0f];
    self.viewTwo.backgroundColor = [UIColor colorWithRed:246/255.f green:246/255.f blue:246/255.f alpha:1.0f];

    
    self.findUserNameTextfield=[[UITextField alloc]initWithFrame:CGRectMake(59, 151, 256, 30)];
    self.findVerificationCode=[[UITextField alloc]initWithFrame:CGRectMake(59, 216, 256, 30)];
    
    self.findUserNameTextfield.placeholder=@"请输入手机号";
    self.findVerificationCode.placeholder=@"请输入验证码";
    self.findUserNameTextfield.keyboardType = UIKeyboardTypeNumberPad;
    self.findVerificationCode.keyboardType = UIKeyboardTypeNumberPad;
    self.findUserNameTextfield.clearButtonMode=UITextFieldViewModeAlways;
    self.findVerificationCode.clearButtonMode=UITextFieldViewModeAlways;
    //设置代理，添加方法
    self.findUserNameTextfield.delegate=self;
    self.findVerificationCode.delegate=self;
    [self.findUserNameTextfield addTarget:self action:@selector(findvalueChanged) forControlEvents:UIControlEventEditingChanged];
    [self.findVerificationCode addTarget:self action:@selector(findvalueChanged) forControlEvents:UIControlEventEditingChanged];
    //字体大小
    self.findUserNameTextfield.font=[UIFont systemFontOfSize:14];
    self.findVerificationCode.font=[UIFont systemFontOfSize:14];
    
    
    
    //白色背景
    UIView *backView = [[UIView alloc] init];
    backView.layer.cornerRadius = 5;
    [self.viewOne addSubview:backView];
    
    backView.backgroundColor = [UIColor whiteColor];
    
    [backView addSubview:self.findUserNameTextfield];
    [backView addSubview:self.findVerificationCode];
    
    [backView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.viewOne).offset(kWidth(7.5));
        make.right.mas_equalTo(self.viewOne).offset(-kWidth(7.5));
        make.height.mas_equalTo(kHeight(88));
        make.top.mas_equalTo(self.viewOne).offset(kHeight(17));
    }];

    [backView addSubview:self.findUserNameTextfield];
    [backView addSubview:self.findVerificationCode];
    

    [self.findUserNameTextfield mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(self.view.bounds.size.width*2.5/5, 30));
        
        make.centerY.mas_equalTo(backView.centerY).multipliedBy(0.5);
        make.left.mas_equalTo(backView).offset(kWidth(45));
    }];
    [self.findVerificationCode mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(self.view.bounds.size.width*2.5/5, 30));
       
        make.centerY.mas_equalTo(backView.centerY).multipliedBy(1.5);
        
        make.left.mas_equalTo(backView).offset(kWidth(45));
    }];
    
    
    //imageview
    UIImageView *phoneImg = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"Login.bundle/ico_mobile"]];
    [backView addSubview:phoneImg];
    [phoneImg mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(21), kHeight(21)));
        make.left.mas_equalTo(backView).offset(kWidth(14));
        make.centerY.mas_equalTo(self.findUserNameTextfield);
    }];
    UIImageView *codeImg = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"Login.bundle/ico_key"]];
    [backView addSubview:codeImg];
    [codeImg mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(21), kHeight(21)));
        make.left.mas_equalTo(backView).offset(kWidth(14));
        
        make.centerY.mas_equalTo(self.findVerificationCode);
    }];

    
    //view
    
    UIView *phoneView = [[UIView alloc]init];
    phoneView.backgroundColor=[UIColor colorWithRed:246/255.f green:246/255.f blue:246/255.f alpha:1.0f];
    [backView addSubview:phoneView];
    phoneView.translatesAutoresizingMaskIntoConstraints=NO;
    [phoneView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(359), 1));
        make.top.mas_equalTo(backView).offset(kHeight(44));
        make.centerX.mas_equalTo(self.viewOne);
    }];
    self.getCodeButton=[[UIButton alloc]init];
    [self.getCodeButton setTitle:@"发送验证码" forState:UIControlStateNormal];
    [self.getCodeButton setTitleColor:UIColorFromRGB(0x46A0E3) forState:UIControlStateNormal];
    self.getCodeButton.titleLabel.font=[UIFont systemFontOfSize:14];
    [self.getCodeButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_primary_wireframe_click"] forState:UIControlStateNormal];
    [self.getCodeButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_primary_wireframe_click"] forState:UIControlStateHighlighted];
    
    //添加获取验证码事件
    [self.getCodeButton addTarget:self action:@selector(findGetCode) forControlEvents:UIControlEventTouchUpInside];
    
    [self.viewOne addSubview:self.getCodeButton];
    self.getCodeButton.translatesAutoresizingMaskIntoConstraints=NO;
    [self.getCodeButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(84.5), kHeight(32)));
        make.right.mas_equalTo(backView.right).offset(-kWidth(8));
        make.centerY.mas_equalTo(self.findVerificationCode);
    }];
    
    //button
    
    self.nextButton=[[UIButton alloc]initWithFrame:CGRectMake(59, 468, 256, 50)];
    [self.nextButton setTitle:@"下一步" forState:UIControlStateNormal];
    [self.nextButton setTitleColor:[UIColor whiteColor]forState:UIControlStateNormal];
    [self.nextButton setTitleColor:[UIColor grayColor] forState:UIControlStateDisabled];
    self.nextButton.enabled =NO;
    [self.nextButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_primary_b"] forState:UIControlStateNormal];
    [self.nextButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_disable"] forState:UIControlStateDisabled];
    //添加验证事件
    [self.nextButton addTarget:self action:@selector(findCheckCode) forControlEvents:UIControlEventTouchUpInside];

    [_viewOne addSubview:self.nextButton];
    
    
    self.nextButton.translatesAutoresizingMaskIntoConstraints=NO; 
    [self.nextButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.viewOne).offset(kWidth(7.5));
        make.right.mas_equalTo(self.viewOne).offset(-kWidth(7.5));
        make.height.mas_equalTo(kHeight(44));
        make.top.mas_equalTo(backView.bottom).offset(kHeight(21));
    }];
    
    
    [self.view addSubview:_viewOne];

    
    self.findPasswordTextfield=[[UITextField alloc]initWithFrame:CGRectMake(59, 278, 256, 30)];
    self.findAffirmPasswordTextfield=[[UITextField alloc]initWithFrame:CGRectMake(59, 338, 256, 30)];
    
    self.findPasswordTextfield.placeholder=@"请输入6-16位数字/字母";
    self.findAffirmPasswordTextfield.placeholder=@"请再次输入您的密码";
    self.findPasswordTextfield.secureTextEntry = YES;
    self.findAffirmPasswordTextfield.secureTextEntry = YES;
    self.findPasswordTextfield.clearButtonMode=UITextFieldViewModeAlways;
    self.findAffirmPasswordTextfield.clearButtonMode=UITextFieldViewModeAlways;
    //字体大小
    self.findPasswordTextfield.font=[UIFont systemFontOfSize:14];
    self.findAffirmPasswordTextfield.font=[UIFont systemFontOfSize:14];
    //设置代理，添加方法
    self.findPasswordTextfield.delegate=self;
    self.findAffirmPasswordTextfield.delegate=self;
    [self.findAffirmPasswordTextfield addTarget:self action:@selector(findvalueChanged) forControlEvents:UIControlEventEditingChanged];
    [self.findPasswordTextfield addTarget:self action:@selector(findvalueChanged) forControlEvents:UIControlEventEditingChanged];
    
    
    
    self.findPasswordTextfield.translatesAutoresizingMaskIntoConstraints=NO;
    self.findAffirmPasswordTextfield.translatesAutoresizingMaskIntoConstraints=NO;
    
    //白色背景
    UIView *twoBackView = [[UIView alloc] init];
    twoBackView.layer.cornerRadius = 5;
    [self.viewTwo addSubview:twoBackView];
    
    twoBackView.backgroundColor = [UIColor whiteColor];
    
    
    [twoBackView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.viewTwo).offset(kWidth(7.5));
        make.right.mas_equalTo(self.viewTwo).offset(-kWidth(7.5));
        make.height.mas_equalTo(kHeight(88));
        make.top.mas_equalTo(self.viewTwo).offset(kHeight(17));
    }];
    
    
    
    [twoBackView addSubview:self.findPasswordTextfield];
    [twoBackView addSubview:self.findAffirmPasswordTextfield];
    
    [self.findPasswordTextfield mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(self.view.bounds.size.width*3/5, 30));
        //        make.top.mas_equalTo(_viewTwo).offset(100);
        make.centerY.equalTo(twoBackView.centerY).multipliedBy(0.5);
        make.left.mas_equalTo(twoBackView).offset(kWidth(90));
    }];
    [self.findAffirmPasswordTextfield mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(self.view.bounds.size.width*3/5, 30));
        //        make.top.mas_equalTo(self.rePasswordTextField).offset(45);
        make.centerY.equalTo(twoBackView.centerY).multipliedBy(1.5);
        
        make.left.mas_equalTo(twoBackView).offset(kWidth(90));
    }];
    
    //Label
    UILabel *phoneLabe=[[UILabel alloc]initWithFrame:CGRectMake(30, 260, 256, 30)];
    phoneLabe.text=@"设置密码";
    
    [twoBackView addSubview:phoneLabe];
    phoneLabe.translatesAutoresizingMaskIntoConstraints=NO;
    [phoneLabe mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(80), kHeight(16.5)));
        make.left.mas_equalTo(twoBackView).offset(kWidth(12));
        make.centerY.mas_equalTo(self.findPasswordTextfield);
    }];
    UILabel *passwordLabe=[[UILabel alloc]initWithFrame:CGRectMake(30, 260, 256, 30)];
    passwordLabe.text=@"确认密码";
    
    [twoBackView addSubview:passwordLabe];
    passwordLabe.translatesAutoresizingMaskIntoConstraints=NO;
    [passwordLabe mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(80), kHeight(16.5)));
        make.left.mas_equalTo(twoBackView).offset(kWidth(12));
        make.centerY.mas_equalTo(self.findAffirmPasswordTextfield);
    }];
    
    
    //view
    UIView *phoneVie = [[UIView alloc]init];
    phoneVie.backgroundColor=[UIColor colorWithRed:246/255.f green:246/255.f blue:246/255.f alpha:1.0f];
    [twoBackView addSubview:phoneVie];
    phoneVie.translatesAutoresizingMaskIntoConstraints=NO;
    [phoneVie mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(kWidth(359), 1));
        make.top.mas_equalTo(twoBackView).offset(kHeight(44));
        make.centerX.mas_equalTo(self.viewTwo);
    }];

    self.registerButton=[[UIButton alloc]initWithFrame:CGRectMake(59, 468, 256, 50)];
    [self.registerButton setTitle:@"确认" forState:UIControlStateNormal];
    
    [self.registerButton setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
    [self.registerButton setBackgroundColor:UIColorFromRGB(0xcccccc)];
    self.registerButton.enabled =NO;
    [self.registerButton setTitleColor:[UIColor whiteColor]forState:UIControlStateNormal];
    [self.registerButton setTitleColor:[UIColor grayColor] forState:UIControlStateDisabled];
    
    [self.registerButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_primary_b"] forState:UIControlStateNormal];
    [self.registerButton setBackgroundImage:[UIImage imageNamed:@"Answer.bundle/btn_disable"] forState:UIControlStateDisabled];
    [_viewTwo addSubview:self.registerButton];
    
    //请求数据
    [self.registerButton addTarget:self action:@selector(resetPassword) forControlEvents:UIControlEventTouchUpInside];
    [self.registerButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.viewTwo).offset(kWidth(8));
        make.right.mas_equalTo(self.viewTwo).offset(-kWidth(8));
        make.height.mas_equalTo(kHeight(44));
        make.top.mas_equalTo(twoBackView.bottom).offset(kHeight(21));
        make.centerX.mas_equalTo(_viewTwo);
    }];
    [self.view addSubview:_viewTwo];
    
    [_viewTwo setHidden:YES];
}

-(void)clickBack{
    [self dismissViewControllerAnimated:YES completion:nil];
}

-(void)findGetCode{
    if (self.findUserNameTextfield.text.length==11){
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
    mutableDic[@"telePhone"]=self.findUserNameTextfield.text;
    mutableDic[@"type"] = @"0";

    [NetWorkRequest sendRequestWithUrl:sendCodeUrl withParameters:mutableDic withType:@"post" success:^(id responseObject) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        JYLog(@"%@",responseObject);
        //判断请求是否成功
        NSString *code=[responseObject valueForKey:@"code"];
        NSString *message=[responseObject valueForKey:@"message"];
        if ([code isEqualToString:@"000000"]){
            [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:@"发送成功!" withDismissTime:1 withControl:self];
            dispatch_async(dispatch_get_main_queue(), ^{
                //发送请求成功，倒计时开始
                __block int timeout=60; //倒计时时间
                dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
                dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
                dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
                dispatch_source_set_event_handler(_timer, ^{
                    if(timeout<=0){ //倒计时结束，关闭
                        dispatch_source_cancel(_timer);
                        dispatch_async(dispatch_get_main_queue(), ^{
                            //设置界面的按钮显示 根据自己需求设置
                            [self.getCodeButton setTitle:@"获取验证码" forState:UIControlStateNormal];
                            self.getCodeButton.userInteractionEnabled = YES;
                        });
                    }else{
                        int seconds = timeout % 60;
                        NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
                        dispatch_async(dispatch_get_main_queue(), ^{
                            //设置界面的按钮显示 根据自己需求设置
                            //NSLog(@"____%@",strTime);
                            [UIView beginAnimations:nil context:nil];
                            [UIView setAnimationDuration:1];
                            [self.getCodeButton setTitle:[NSString stringWithFormat:@"%@秒后重发",strTime] forState:UIControlStateNormal];
                            [UIView commitAnimations];
                            self.getCodeButton.userInteractionEnabled = NO;
                        });
                        timeout--;
                    }
                });
                dispatch_resume(_timer);
            });
        }else{
            [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"%@",message] withDismissTime:1.2 withControl:self];
        }

    } failure:^(NSError *error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        JYLog(@"%@",error);
        [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"网络请求失败"] withDismissTime:1.2 withControl:self];
    }];

    }else{
        [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"您输入的手机号不正确"] withDismissTime:1.5 withControl:self];
    }
        
}
-(void)findCheckCode{
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    
    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
    //添加MD5加密
    
    mutableDic[@"telePhone"]=self.findUserNameTextfield.text;
    mutableDic[@"code"]=self.findVerificationCode.text;

    [NetWorkRequest sendRequestWithUrl:checkCodeUrl withParameters:mutableDic withType:@"post" success:^(id responseObject) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        self.tokenString=[responseObject valueForKey:@"token"];
        NSString *message=[responseObject valueForKey:@"message"];
        
        NSString *code = [[NSString stringWithFormat:@"%@",[responseObject valueForKey:@"code"] ]description];
        JYLog(@"%@",code);
        if ([code isEqualToString:@"001014"]){
            
            [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"%@",message] withDismissTime:1.2 withControl:self];
            
            
            [self.viewOne setHidden:YES];
            [self.viewTwo setHidden:NO];
            
        }else{
            [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"%@",message] withDismissTime:1.2 withControl:self];
            
        }

    } failure:^(NSError *error) {
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        JYLog(@"%@",error);
        [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"网络请求失败"] withDismissTime:1.2 withControl:self];
    }];

}
#pragma mark 重置密码
-(void)resetPassword{
    
    if ([self.findPasswordTextfield.text isEqualToString:self.findAffirmPasswordTextfield.text]){
    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
    //添加MD5加密
    
    mutableDic[@"telePhone"]= self.findUserNameTextfield.text;
    mutableDic[@"password"]= self.findPasswordTextfield.text;
    mutableDic[@"token"]= self.tokenString;

    [NetWorkRequest sendRequestWithUrl:resetPasswordUrl
                        withParameters:mutableDic
                              withType:@"post"
                               success:^(id responseObject) {
        
        [MBProgressHUD hideHUDForView:self.view animated:YES];
        
        
        NSString *code = [[NSString stringWithFormat:@"%@",[responseObject valueForKey:@"code"] ]description];
        NSString *message=[responseObject valueForKey:@"message"];
        JYLog(@"%@",responseObject);
            if ([code isEqualToString:@"0"]){
                
                
                [self.delegate changePassWord:self.findPasswordTextfield.text];
                [self.delegate changeUserName:self.findUserNameTextfield.text];
                
                [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"%@",message] withDismissTime:1.5 withControl:self];
                
                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                    [self.navigationController popViewControllerAnimated:YES];
                });
                
            }else{
                [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"%@",message] withDismissTime:1.5 withControl:self];
            }

        } failure:^(NSError *error) {
            [MBProgressHUD hideHUDForView:self.view animated:YES];
            [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"网络请求失败"] withDismissTime:1.5 withControl:self];
        }];
    }else{
        [[commonUnit sharedCommonUtils]showAlertWithTitle:@"提示" message:[NSString stringWithFormat:@"验证密码不正确"] withDismissTime:1.5 withControl:self];
    }

}
#pragma mark -输入框内容变化进行判断
//按钮的方法
- (void)findvalueChanged{
    //判断输入框是否有内容,根据内容变化对对登录按钮的颜色进行改变
    
    if(self.findUserNameTextfield.text.length ==11 && self.findVerificationCode.text.length ==6){
        self.nextButton.enabled = YES;
    }else {
        self.nextButton.enabled =NO;
    }
    if (self.findPasswordTextfield.text.length <=5 || self.findPasswordTextfield.text.length >=17||self.findAffirmPasswordTextfield.text.length <=5 || self.findAffirmPasswordTextfield.text.length >=17) {
        self.registerButton.enabled =NO;
        
    }else if((self.findPasswordTextfield.text.length>5&&self.findPasswordTextfield.text.length<17)||(self.findAffirmPasswordTextfield.text.length>5&&self.findAffirmPasswordTextfield.text.length<17)){
        self.registerButton.enabled = YES;
    }
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if (textField == self.findUserNameTextfield) {
        if (range.length ==0&& range.location>10) {
            
            return NO;
        }
    }else if (textField == self.findVerificationCode){
        if (range.length ==0&& range.location>5) {
            return NO;
        }
        
    }
    if (textField == self.findPasswordTextfield) {
        if (range.length ==0&& range.location>15) {
            
            return NO;
        }
    }else if (textField == self.findAffirmPasswordTextfield){
        if (range.length ==0&& range.location>15) {
            return NO;
        }
        
    }
    
    return YES;
}



@end
