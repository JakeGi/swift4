//
//  MyCenterViewController.m
//  qierkang
//
//  Created by 陈刚 on 17/2/28.
//  Copyright © 2017年 dzjk. All rights reserved.
//

#import "MyCenterViewController.h"
#import "MyCenterTableViewCell.h"
#import "MycenterHeadView.h"
#import "DZSignview.h"
#import "DZLevelView.h"
@interface MyCenterViewController ()<UITableViewDelegate,UITableViewDataSource,UIScrollViewDelegate>

@property(nonatomic,strong)UITableView *tableView;
//列表展示信息
@property (nonatomic,strong)NSArray *cellArr;
//title
@property (nonatomic,strong)UILabel *LabTitle;
//_barImageView
@property (nonatomic,strong)UIImageView *barImageView;
//用户信息
@property (nonatomic,strong)NSDictionary *userInfoDic;

//头部试图
@property (nonatomic,strong)MycenterHeadView *headView;
//月份
@property (nonatomic, strong) NSDateComponents *monthDateComponents;
//日历
@property (nonatomic, strong) NSCalendar *calendar;

@property (nonatomic, strong) NSDateComponents *todayMonthDateComponents;
@property (nonatomic, strong) NSDateComponents *currentMonthDateComponents;
@property (nonatomic, strong) NSDate *today;//服务器返回的今天的日期，不能取本机时间，因为系统时间可以手动改
/**windowView*/
@property (nonatomic,strong)UIView *windowView;
/**签到日历*/
@property (nonatomic,strong)DZSignview *signView;

//等级
@property (nonatomic,strong)DZLevelView *DZLevelView;
@end

@implementation MyCenterViewController


- (NSArray *)cellArr
{
    if (_cellArr == nil) {
        _cellArr = [NSArray array];
    }
    _cellArr = @[@{@"left":@"MyCenter.bundle/ico_notice",@"right":@"消息通知"},
                 @{@"left":@"MyCenter.bundle/ico_feedback",@"right":@"意见反馈"},
                @{@"left":@"MyCenter.bundle/ico_set",@"right":@"设置中心"}];

    return _cellArr;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = @"我的";
    self.automaticallyAdjustsScrollViewInsets = NO;
    //默认状态显示界面数据
    [self createUI];
    
    self.today = [NSDate date];//test,理论上应该从服务器获取
    NSDateComponents *dateComponents = [self.calendar components:NSCalendarUnitYear | NSCalendarUnitMonth | NSCalendarUnitDay fromDate:self.today];
    self.todayMonthDateComponents = dateComponents;
    self.currentMonthDateComponents = dateComponents;
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    //设置导航栏跟随滚动变化透明度
    self.navigationController.navigationBarHidden = YES;
    //取消重复添加的tabbar
    for (UIView *view in self.tabBarController.tabBar.subviews) {
        if (![view isKindOfClass:[JYTabBar class]]) {
            [view removeFromSuperview];
        }
    }
    //加载数据
    [self getUserInfo];
    //获取签到信息
    [self getSignList];

}
#pragma mark - 获取签到信息
- (void)getSignList
{
    NSDictionary *userInfo = [[chiveDataManager sharedChive] unarchivewithPath:@"userInfo"];
    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
    mutableDic[@"token"] = [userInfo objectForKey:@"token"];
    /*
     "count" : "2",
     "serial_day" : "1",
     "sign" : [ {
     "id" : "6954D164BAE5432E88742692A6EC8946",
     "create_time" : "2017-06-13 16:24:06",
     "userid" : "1",
     "serial_day" : 1
     },
     */
    [NetWorkRequest sendRequestWithUrl:getUserSignListUrl withParameters:mutableDic withType:@"post" success:^(id responseObject) {
        JYLog(@"%@",responseObject);
        if ([[responseObject objectForKey:@"code"] isEqualToString:@"001000"]) {

        }else if ([[responseObject objectForKey:@"code"] isEqualToString:loginTimeout]){
            //登录超时
            [[commonUnit sharedCommonUtils] showAlertWithTitle:@"提示" message:@"登录超时，请重新登录!" actionTitle:@"重新登录" withControl:self withHandler:^{
                                [Mediator loginOutWithLoginClass:@"LoginViewController" withNavC:@"JYNavigationContrller"];


            }];
        }
    } failure:^(NSError *error) {
        
        JYLog(@"%@",error);
        
    }];

}
#pragma mark - 获取头部信息
- (void)getUserInfo
{
    NSDictionary *userInfo = [[chiveDataManager sharedChive] unarchivewithPath:@"userInfo"];
    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
    mutableDic[@"token"] = [userInfo objectForKey:@"token"];
    
    [NetWorkRequest sendRequestWithUrl:getHeadInfoUrl withParameters:mutableDic withType:@"post" success:^(id responseObject) {
        JYLog(@"%@",responseObject);
        if ([[responseObject objectForKey:@"code"] isEqualToString:@"001000"]) {
            
            self.userInfoDic = [NSDictionary dictionaryWithDictionary:responseObject];
            //设置数据
            [self setHeadViewData];
        }else if ([[responseObject objectForKey:@"code"] isEqualToString:loginTimeout]){
            //登录超时
            [[commonUnit sharedCommonUtils] showAlertWithTitle:@"提示" message:@"登录超时，请重新登录!" actionTitle:@"重新登录" withControl:self withHandler:^{
                [Mediator loginOutWithLoginClass:@"LoginViewController" withNavC:@"JYNavigationContrller"];
                
            }];
        }
    } failure:^(NSError *error) {
        
        JYLog(@"%@",error);
        
    }];
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    self.navigationController.navigationBarHidden = NO;    
}
#pragma mark - 创建UI界面
-(void)createUI{
    self.view.backgroundColor = kWhiteColor;
    
    self.tableView = [[UITableView alloc]initWithFrame:CGRectMake(0,0, JYScreenW, JYScreenH-49) style:UITableViewStylePlain];
    
    self.tableView.backgroundColor = UIColorFromRGB(0xF7F7F8);
    
    [self.view addSubview:self.tableView];

    _headView = [[MycenterHeadView alloc] initWithFrame:CGRectMake(0, 0, JYScreenW, kHeight(300)) WithTarget:self];
    self.tableView.tableHeaderView = _headView;
    
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    
}

#pragma mark -  设置数据
- (void)setHeadViewData
{
    _headView.userInfoDic = self.userInfoDic;
    
}
#pragma mark - UITableViewDataSource
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    return 1;
    
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    return  self.cellArr.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    MyCenterTableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:@"cell"];
    if (cell==nil){
        cell=[[MyCenterTableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];
    }
    if (indexPath.row !=5) {
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    cell.cellDic = self.cellArr[indexPath.row];
    
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    switch (indexPath.row) {
        case 0:
            [Mediator pushToControll:@"BaseNewsTableViewController" withPropertyValueDic:@{@"type":@"3"}];
            break;
        case 1:
            [Mediator pushToControll:@"SuggestionViewController"];
            break;
        case 2:
            [Mediator pushToControll:@"SettingViewController"];
            break;
        default:
            break;
    }
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return kHeight(44);
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.01;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{

    return 10;
}

-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        if (indexPath.section !=3) {
            [cell setSeparatorInset:UIEdgeInsetsMake(0, kWidth(40), 0, 0)];
        }else{
            [cell setSeparatorInset:UIEdgeInsetsMake(0, 0, 0, 0)];
        }
    }
}
#pragma mark - 我的积分
- (void)intager
{
    [Mediator pushToControll:@"DZMyIntagerViewController"];
}
#pragma mark - 智能签到
- (void)regist
{
    [_signView removeFromSuperview];
    _signView = [[DZSignview alloc] initWithFrame:CGRectMake(kWidth(50), kHeight(100),JYScreenW - kWidth(100), kHeight(375)) withTarget:self];
    _signView.Todaycomponents = self.todayMonthDateComponents;
    
    [_signView setupWithMonthDateComponents:self.todayMonthDateComponents];
    
    [_signView uploadCurrentDate:self.todayMonthDateComponents];
    
    //test,理论上应该从服务器获取
    NSArray *signDayArray = @[@"1", @"3", @"7", @"11", @"23", @"27"];
    [_signView updateWithSignDayArray:signDayArray];
    
    [self.windowView addSubview:_signView];
    
    [[UIApplication sharedApplication].keyWindow addSubview:self.windowView];
}
#pragma mark - 签到弹窗背景
-(UIView *)windowView
{
    if (_windowView == nil) {
        _windowView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, JYScreenW, JYScreenH)];
        _windowView.backgroundColor = [UIColorFromRGB(0x000000) colorWithAlphaComponent:0.5];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(removeSign)];
        [_windowView addGestureRecognizer:tap];
        _windowView.userInteractionEnabled = YES;
    }
    return  _windowView;
}
#pragma mark - 移除签到弹窗界面
- (void)removeSign
{
    if (self.windowView !=nil) {
        [self.windowView removeFromSuperview];
    }
    self.currentMonthDateComponents = self.todayMonthDateComponents;
}

#pragma mark - 向前调整月份
- (void)dwonMonth
{
    NSDateComponents *previousDateComponents = [[NSDateComponents alloc] init];
    NSInteger year = self.currentMonthDateComponents.year;
    NSInteger month = self.currentMonthDateComponents.month - 1;
    if (month == 0) {
        month = 12;
        year = year - 1;
    }
    previousDateComponents.year = year;
    previousDateComponents.month = month;
    previousDateComponents.day = 1;
    self.currentMonthDateComponents = previousDateComponents;
    [self.signView setupWithMonthDateComponents:previousDateComponents];
    [self.signView uploadCurrentDate:previousDateComponents];
    
    //test,理论上应该从服务器获取
    NSArray *signDayArray = @[@"2", @"3", @"4", @"5", @"14", @"27"];
    [_signView updateWithSignDayArray:signDayArray];
}
#pragma mark - 向后调整月份
- (void)upMonth
{
    NSDateComponents *nextDateComponents = [[NSDateComponents alloc] init];
    NSInteger year = self.currentMonthDateComponents.year;
    NSInteger month = self.currentMonthDateComponents.month + 1;
    if (month == 13) {
        month = 1;
        year = year + 1;
    }
    nextDateComponents.year = year;
    nextDateComponents.month = month;
    nextDateComponents.day = 1;
    self.currentMonthDateComponents = nextDateComponents;
    [self.signView setupWithMonthDateComponents:nextDateComponents];
    [self.signView uploadCurrentDate:nextDateComponents];
    //test,理论上应该从服务器获取
    NSArray *signDayArray = @[@"4", @"20", @"21", @"22", @"23", @"31"];
    [_signView updateWithSignDayArray:signDayArray];
}
#pragma mark - 点击签到
- (void)sign
{
    if ([[self.userInfoDic objectForKey:@"sign"] isEqualToString:@"Y"]) {
        [[commonUnit sharedCommonUtils] showAlertWithTitle:@"提示" message:@"您已经签到过了!" withDismissTime:1.2 withControl:self withDisHandler:^{
            [self.windowView removeFromSuperview];
            self.currentMonthDateComponents = self.todayMonthDateComponents;
        }];
    }else{
    
        [SVProgressHUD setDefaultMaskType:SVProgressHUDMaskTypeClear];
        [SVProgressHUD showWithStatus:@"正在签到..."];
//        NSDictionary *userInfo = [[chiveDataManager sharedChive] unarchivewithPath:@"userInfo"];
//        NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
//        mutableDic[@"token"] = [userInfo objectForKey:@"token"];
//        mutableDic[@""] = ;
//        mutableDic[@""] = ;
//        [NetWorkRequest sendRequestWithUrl: withParameters:mutableDic withType:@"post" success:^(id responseObject) {
//            JYLog(@"%@",responseObject);
//            if ([[responseObject objectForKey:@"code"] isEqualToString:@""]) {
//
//            }else if ([[responseObject objectForKey:@"code"] isEqualToString:loginTimeout]){
//                //登录超时
//                [[commonUnit sharedCommonUtils] showAlertWithTitle:@"提示" message:@"登录超时，请重新登录!" actionTitle:@"重新登录" withControl:self withHandler:^{
//                                    [Mediator loginOutWithLoginClass:@"LoginViewController" withNavC:@"JYNavigationContrller"];
//
//
//                }];
//            }else{
//                [[commonUnit sharedCommonUtils] showAlertWithTitle:@"提示" message:[responseObject objectForKey:@"message"] withDismissTime:1.5 withControl:self];
//            }
//            
//        } failure:^(NSError *error) {
//            
//            JYLog(@"%@",error);
//            
//        }];
        [SVProgressHUD dismissWithDelay:1];
        [SVProgressHUD showSuccessWithStatus:@"签到成功"];
        [SVProgressHUD dismissWithDelay:1];
        [self.windowView removeFromSuperview];
        self.currentMonthDateComponents = self.todayMonthDateComponents;
    }

}
#pragma mark - property
- (NSCalendar *)calendar {
    if (!_calendar) {
        _calendar = [NSCalendar currentCalendar];
        _calendar.firstWeekday = 1;//1是周日，2是周一，以此类推
        _calendar.minimumDaysInFirstWeek = 1;
    }
    return _calendar;
}
#pragma mark - 个人信息
- (void)goUserInfo
{
//    [Mediator pushToControll:@"MyInfoTableViewController"];
    [self headImageTap];
}

#pragma mark - 我的等级
- (void)levelBtn
{
    
    
    [_DZLevelView removeFromSuperview];
    _DZLevelView = [[DZLevelView alloc] initWithFrame:CGRectMake(kWidth(42), kHeight(155),JYScreenW - kWidth(84), kHeight(353)) withTarget:self];
    _DZLevelView.layer.cornerRadius = 20;
    
    _DZLevelView.layer.masksToBounds = YES;
    [self.windowView addSubview:_DZLevelView];
    
    [[UIApplication sharedApplication].keyWindow addSubview:self.windowView];

}
#pragma mark - 选择图片
-(void)headImageTap{
    [[commonUnit sharedCommonUtils] selectPhoneAndShowCameraWithControll:self];
    [self.tableView endEditing:YES];
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info{
    UIImage *image = nil;
    
    if ([info objectForKey:UIImagePickerControllerOriginalImage])
    {
        image = [info objectForKey:UIImagePickerControllerOriginalImage];
        if (picker.sourceType ==UIImagePickerControllerSourceTypeCamera) {
            
            UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil);
        }
        JYLog(@"%@",image);
    }
    else
    {
        JYLog(@"UIImagePickerControllerReferenceURL = %@", info);
    }
    
//    image = [UIImage imageByScalingAndCroppingForSize:CGSizeMake(300, 300) withIMG:image];//100k
//    _imageData = UIImageJPEGRepresentation(image,1.0);
    //上传头像
//    [self sendHeadData];
    [picker dismissViewControllerAnimated:YES completion:nil];
    
    [self.tableView reloadData];
}
#pragma mark - 上传头像
//- (void)sendHeadData
//{
//    NSDictionary *userInfo = [[chiveDataManager sharedChive] unarchivewithPath:@"userInfo"];
//    
//    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
//    formatter.dateFormat = @"yyyyMMddHHmmss";
//    NSString *str = [formatter stringFromDate:[NSDate date]];
//    NSString *fileName = [NSString stringWithFormat:@"%@.jpg", str];
//    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
//    
//    mutableDic[@"token"]= [userInfo objectForKey:@"token"];
//    
//    [NetWorkRequest upLoadDataWithUrl:uploadFileUrl withData:_imageData withParameters:mutableDic withFileName:fileName withmimeType:@"image/jpeg" success:^(id responseObject) {
//        JYLog(@"%@",responseObject);
//        if ([[responseObject valueForKey:@"code"]isEqualToString:@"0"]){
//            NSString *photo = [responseObject objectForKey:@"photo"];
//            NSString *miniphoto = [responseObject objectForKey:@"miniphoto"];
//            JYLog(@"adressStr %@ ,miniStr %@",photo,miniphoto);
//            
//            [self sendDiseaseRequestWithAdressStr:photo with:miniphoto];
//        }
//        
//    } failure:^(NSError *error) {
//        JYLog(@"%@",error);
//    }];
//    
//}
//#pragma mark 上传头像
//- (void)sendDiseaseRequestWithAdressStr:(NSString *)adress with:(NSString *)minimageStr
//{
//    //获取token
//    NSDictionary *userInfo = [[chiveDataManager sharedChive] unarchivewithPath:@"userInfo"];
//    
//    NSMutableDictionary *mutableDic=[NSMutableDictionary dictionary];
//    mutableDic[@"photo"]= adress;
//    mutableDic[@"miniphoto"] = minimageStr;
//    mutableDic[@"token"]= [userInfo objectForKey:@"token"];
//    
//    [NetWorkRequest sendRequestWithUrl:addPhotoUrl withParameters:mutableDic withType:@"post" success:^(id responseObject) {
//        JYLog(@"responseObject=====%@",responseObject);
//        [SVProgressHUD dismiss];
//        if ([[responseObject valueForKey:@"code"]isEqualToString:@"001013"]){
//            
//            [SVProgressHUD showSuccessWithStatus:@"上传成功！"];
//            
//            [SVProgressHUD dismissWithDelay:1.2];
//            
//            [[chiveDataManager sharedChive] chiveDataDic:@{@"photo":minimageStr} withPathName:@"userPhoto"];
//            [self.tableView reloadData];
//        }
//    } failure:^(NSError *error) {
//        [SVProgressHUD showWithStatus:@"上传失败！"];
//        
//        [SVProgressHUD dismissWithDelay:1.2];
//    }];
//}

@end
